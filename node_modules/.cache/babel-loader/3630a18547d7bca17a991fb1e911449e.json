{"remainingRequest":"/Users/limengge/Desktop/solidity/mdex/multi/node_modules/thread-loader/dist/cjs.js!/Users/limengge/Desktop/solidity/mdex/multi/node_modules/babel-loader/lib/index.js!/Users/limengge/Desktop/solidity/mdex/multi/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/limengge/Desktop/solidity/mdex/multi/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/limengge/Desktop/solidity/mdex/multi/src/views/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/limengge/Desktop/solidity/mdex/multi/src/views/index.vue","mtime":1618824077963},{"path":"/Users/limengge/Desktop/solidity/mdex/multi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/limengge/Desktop/solidity/mdex/multi/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/limengge/Desktop/solidity/mdex/multi/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/limengge/Desktop/solidity/mdex/multi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/limengge/Desktop/solidity/mdex/multi/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div><!--最外层容器-->\n    <div style=\"float:right;margin:0 0 0 -800px; width:100%\">\n\n      <div style=\"margin:50px 0 0 800px; background:#00000000\">\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ mintTextValue }}</template>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <el-input v-model=\"input1\" placeholder=\"to\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <el-input v-model=\"input2\" placeholder=\"value\"></el-input>\n        </div>\n\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText7 }}</template>\n          <el-input v-model=\"multiTextInput9\" placeholder=\"签名信息\"></el-input>\n        </div>\n\n        <div>\n          <el-button @click=\"mintFunction\">{{ claim }}</el-button>\n        </div>\n\n        <div style=\"width:400px;margin:20px 0 0 0;background:#00000000\">\n          <template>{{ multiText8 }}</template>\n          <el-input v-model=\"multiTextInput10\" placeholder=\"\"></el-input>\n        </div>\n      </div>\n    </div>\n\n\n    <div style=\"float:left;margin:50px 0 0 100px ; background:#00000000\">\n\n      <div>\n        <template>{{ multiAddressList }}</template>\n      </div>\n      <div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText1 }}</template>\n          <el-input v-model=\"multiTextInput1\" placeholder=\"地址1\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText2 }}</template>\n          <el-input v-model=\"multiTextInput2\" placeholder=\"地址2\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText3 }}</template>\n          <el-input v-model=\"multiTextInput3\" placeholder=\"地址3\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText4 }}</template>\n          <el-input v-model=\"multiTextInput4\" placeholder=\"地址4\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText5 }}</template>\n          <el-input v-model=\"multiTextInput5\" placeholder=\"地址5\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText6 }}</template>\n          <el-input v-model=\"multiTextInput6\" placeholder=\"阈值\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText7 }}</template>\n          <el-input v-model=\"multiTextInput7\" placeholder=\"签名信息\"></el-input>\n        </div>\n\n        <div>\n          <el-button @click=\"editFunction\">{{ editAddress }}</el-button>\n        </div>\n\n        <div style=\"width:400px;margin:20px 0 0 0;background:#00000000\">\n          <template>{{ multiText8 }}</template>\n          <el-input v-model=\"multiTextInput8\" placeholder=\"\"></el-input>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {Component, Vue} from \"vue-property-decorator\";\n\nconst yfxToken = '41528d4f67c7055152052058cd9646c8e2cbfe729e';\nconst owner_address = '41384da1b1e9d08842d523872b4d42f62c0d97c74f';\n\n@Component\nexport default class Index extends Vue {\n  data() {\n    return {\n      multiAddressList: '多签地址成员列表：',\n      multiText1: '多签地址1（权重1）',\n      multiText2: '多签地址2（权重1）',\n      multiText3: '多签地址3（权重1）',\n      multiText4: '多签地址4（权重1）',\n      multiText5: '多签地址5（权重1）',\n      multiText6: '阈值',\n      multiText7: '多签数据(第一个签名不用输入)',\n      multiText8: '签名后的签名信息（通过通讯工具将签名后的信息发送给下一个需要签名的人）:',\n      multiTextInput1: '',\n      multiTextInput2: '',\n      multiTextInput3: '',\n      multiTextInput4: '',\n      multiTextInput5: '',\n      multiTextInput6: '',\n      multiTextInput7: '',\n      multiTextInput8: '',\n      multiTextInput9: '',\n      multiTextInput10: '',\n\n      claim: \"mint\",\n      mintTextValue: 'mint功能:',\n      input1: '',\n      input2: '',\n\n      editAddress: '修改权限',\n    }\n  };\n\n  async mounted() {\n    // import http from '@/request/api.js'\n    if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\n      console.log(\"init tronweb success\");\n    }\n    //初始化数据\n    let accountdata = await window.tronWeb.trx.getAccount(owner_address)\n    console.log(accountdata)\n    if (accountdata.owner_permission.keys[0] !== undefined) {\n      this.multiTextInput1 = window.tronWeb.address.fromHex(accountdata.owner_permission.keys[0].address)\n    }\n    if (accountdata.owner_permission.keys[1] !== undefined) {\n      this.multiTextInput2 = window.tronWeb.address.fromHex(accountdata.owner_permission.keys[1].address)\n    }\n    if (accountdata.owner_permission.keys[2] !== undefined) {\n      this.multiTextInput3 = window.tronWeb.address.fromHex(accountdata.owner_permission.keys[2].address)\n    }\n    if (accountdata.owner_permission.keys[3] !== undefined) {\n      this.multiTextInput4 = window.tronWeb.address.fromHex(accountdata.owner_permission.keys[3].address)\n    }\n    if (accountdata.owner_permission.keys[4] !== undefined) {\n      this.multiTextInput5 = window.tronWeb.address.fromHex(accountdata.owner_permission.keys[4].address)\n    }\n\n    this.multiTextInput6 = accountdata.owner_permission.threshold\n  };\n\n\n  async mintFunction() {\n    if (!window.tronWeb && !window.tronWeb.defaultAddress.base58) {\n      alert('未连接钱包')\n      return;\n    }\n    this.multiTextInput10 = '';\n    let accountdata = await window.tronWeb.trx.getAccount(owner_address)\n\n    if (this.multiTextInput9 === undefined || this.multiTextInput9 === '') {\n      let functionSelector = 'mint(address,uint256)';\n      let parameters = [{type: 'address', value: this.input1}, {type: 'uint', value: this.input2}];\n      let options = {};\n      let transaction = await window.tronWeb.transactionBuilder.triggerSmartContract(\n          yfxToken,\n          functionSelector,\n          options,\n          parameters,\n          window.tronWeb.defaultAddress.base58\n      );\n      console.log(transaction.transaction);\n\n      let signedTransaction = await window.tronWeb.trx.multiSign(transaction, 0);\n\n      let weightData = await window.tronWeb.trx.getSignWeight(signedTransaction, 0);\n      if (weightData.current_weight >= accountdata.owner_permission.threshold) {\n        const result = await window.tronWeb.trx.broadcast(signedTransaction);\n        console.log(result);\n      } else {\n        console.log(JSON.stringify(signedTransaction));\n      }\n    } else {\n      let signedTransaction = await window.tronWeb.trx.multiSign(transaction, 0);\n\n      let weightData = await window.tronWeb.trx.getSignWeight(signedTransaction, 0);\n      if (weightData.current_weight >= accountdata.owner_permission.threshold) {\n        const result = await window.tronWeb.trx.broadcast(signedTransaction);\n        console.log(result);\n      } else {\n        this.multiTextInput10 = JSON.stringify(signedTransaction)\n      }\n    }\n  };\n\n  async editFunction() {\n    this.multiTextInput8 = '';\n    console.log(\"multiTextInput8: \" + this.multiTextInput8);\n    console.log('default address: ' + window.tronWeb.defaultAddress.base58)\n    if (!window.tronWeb && !window.tronWeb.defaultAddress.base58) {\n      alert('未连接钱包')\n      return;\n    }\n    let accountdata = await window.tronWeb.trx.getAccount(owner_address)\n\n    if (this.multiTextInput7 === undefined || this.multiTextInput7 === '') {\n      if (this.multiTextInput6 === undefined || this.multiTextInput6 === '') {\n        alert('请输入参数')\n        return;\n      }\n\n      if (this.multiTextInput1 === undefined || this.multiTextInput1 === '') {\n        alert('请输入参数')\n        return;\n      }\n\n      let ownerArr = [];\n      let activesArr = [];\n      let threshold = this.multiTextInput6;\n      let jsonData = {\n        \"owner_address\": owner_address,\n        \"owner\": {\n          \"type\": 0,\n          \"id\": 0,\n          \"permission_name\": \"owner\",\n          \"threshold\": Number.parseInt(threshold),\n          \"keys\": ownerArr\n        },\n        \"actives\": [{\n          \"type\": 2,\n          \"id\": 2,\n          \"permission_name\": \"active0\",\n          \"threshold\": Number.parseInt(threshold),\n          \"operations\": \"7fff1fc0037e0000000000000000000000000000000000000000000000000000\",\n          \"keys\": activesArr\n        }]\n      };\n\n      if (this.multiTextInput1 !== undefined && this.multiTextInput1 !== '') {\n        let option = {\n          address: window.tronWeb.address.toHex(this.multiTextInput1),\n          weight: 1\n        }\n        ownerArr.push(option);\n        activesArr.push(option);\n      }\n      if (this.multiTextInput2 !== undefined && this.multiTextInput2 !== '') {\n        let option = {\n          address: window.tronWeb.address.toHex(this.multiTextInput2),\n          weight: 1\n        }\n        ownerArr.push(option);\n        activesArr.push(option);\n      }\n      if (this.multiTextInput3 !== undefined && this.multiTextInput3 !== '') {\n        let option = {\n          address: window.tronWeb.address.toHex(this.multiTextInput3),\n          weight: 1\n        }\n        ownerArr.push(option);\n        activesArr.push(option);\n      }\n      if (this.multiTextInput4 !== undefined && this.multiTextInput4 !== '') {\n        let option = {\n          address: window.tronWeb.address.toHex(this.multiTextInput4),\n          weight: 1\n        }\n        ownerArr.push(option);\n        activesArr.push(option);\n      }\n      if (this.multiTextInput5 !== undefined && this.multiTextInput5 !== '') {\n        let option = {\n          address: window.tronWeb.address.toHex(this.multiTextInput5),\n          weight: 1\n        }\n        ownerArr.push(option);\n        activesArr.push(option);\n      }\n\n      console.log('transaction1:   ' + JSON.stringify(jsonData))\n\n      const url = 'https://api.shasta.trongrid.io/wallet/accountpermissionupdate';\n      const options = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(jsonData)\n      };\n      console.log(1111)\n      fetch(url, options)\n          .then(res => res.json())\n          .then(async function (json) {\n            console.log('transaction2:   ' + JSON.stringify(json))\n            let signedTransaction = await window.tronWeb.trx.multiSign(json, 0);\n\n            let weightData = await window.tronWeb.trx.getSignWeight(signedTransaction, 0);\n            if (weightData.current_weight >= accountdata.owner_permission.threshold) {\n              const result = await window.tronWeb.trx.broadcast(signedTransaction);\n              console.log(result);\n            } else {\n              console.log(JSON.stringify(signedTransaction));\n            }\n          })\n          .catch(err => console.error('error:' + err));\n    } else {\n      console.log('transaction3:   ' + this.multiTextInput7)\n      let signedTransaction = await window.tronWeb.trx.multiSign(JSON.parse(this.multiTextInput7), 0);\n\n      let weightData = await window.tronWeb.trx.getSignWeight(signedTransaction, 0);\n      if (weightData.current_weight >= accountdata.owner_permission.threshold) {\n        const result = await window.tronWeb.trx.broadcast(signedTransaction);\n        console.log(result);\n      } else {\n        this.multiTextInput8 = JSON.stringify(signedTransaction);\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n</style>\n"],"sourceRoot":"src/views"}]}