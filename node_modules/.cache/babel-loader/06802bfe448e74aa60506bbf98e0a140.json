{"remainingRequest":"/Users/limengge/Desktop/yfx-info/node_modules/babel-loader/lib/index.js!/Users/limengge/Desktop/yfx-info/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/limengge/Desktop/yfx-info/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/limengge/Desktop/yfx-info/src/views/home/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/limengge/Desktop/yfx-info/src/views/home/Index.vue","mtime":1618757529970},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div><!--最外层容器-->\n    <div style=\"float:right;margin:0 0 0 -800px; width:100%\">\n\n      <div style=\"margin:50px 0 0 800px; background:#00000000\">\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ mintTextValue }}</template>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <el-input v-model=\"input1\" placeholder=\"to\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <el-input v-model=\"input2\" placeholder=\"value\"></el-input>\n        </div>\n\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText7 }}</template>\n          <el-input v-model=\"multiTextInput9\" placeholder=\"签名信息\"></el-input>\n        </div>\n\n        <div>\n          <el-button @click=\"mintFunction\">{{ claim }}</el-button>\n        </div>\n\n        <div style=\"width:400px;margin:20px 0 0 0;background:#00000000\">\n          <template>{{ multiText8 }}</template>\n          <el-input v-model=\"multiTextInput10\" placeholder=\"\"></el-input>\n        </div>\n      </div>\n    </div>\n\n\n    <div style=\"float:left;margin:50px 0 0 100px ; background:#00000000\">\n\n      <div>\n        <template>{{ multiAddressList }}</template>\n      </div>\n      <div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText1 }}</template>\n          <el-input v-model=\"multiTextInput1\" placeholder=\"地址1\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText2 }}</template>\n          <el-input v-model=\"multiTextInput2\" placeholder=\"地址2\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText3 }}</template>\n          <el-input v-model=\"multiTextInput3\" placeholder=\"地址3\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText4 }}</template>\n          <el-input v-model=\"multiTextInput4\" placeholder=\"地址4\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText5 }}</template>\n          <el-input v-model=\"multiTextInput5\" placeholder=\"地址5\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText6 }}</template>\n          <el-input v-model=\"multiTextInput6\" placeholder=\"阈值\"></el-input>\n        </div>\n        <div style=\"width:400px;background:#00000000\">\n          <template>{{ multiText7 }}</template>\n          <el-input v-model=\"multiTextInput7\" placeholder=\"签名信息\"></el-input>\n        </div>\n\n        <div>\n          <el-button @click=\"editFunction\">{{ editAddress }}</el-button>\n        </div>\n\n        <div style=\"width:400px;margin:20px 0 0 0;background:#00000000\">\n          <template>{{ multiText8 }}</template>\n          <el-input v-model=\"multiTextInput8\" placeholder=\"\"></el-input>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nconst yfxToken = '41528d4f67c7055152052058cd9646c8e2cbfe729e';\nconst owner_address = '41384da1b1e9d08842d523872b4d42f62c0d97c74f';\n\nexport default {\n  data() {\n    return {\n      multiAddressList: '多签地址成员列表：',\n      multiText1: '多签地址1（权重1）',\n      multiText2: '多签地址2（权重1）',\n      multiText3: '多签地址3（权重1）',\n      multiText4: '多签地址4（权重1）',\n      multiText5: '多签地址5（权重1）',\n      multiText6: '阈值',\n      multiText7: '多签数据(第一个签名不用输入)',\n      multiText8: '签名后的签名信息（通过通讯工具将签名后的信息发送给下一个需要签名的人）:',\n      multiTextInput1: '',\n      multiTextInput2: '',\n      multiTextInput3: '',\n      multiTextInput4: '',\n      multiTextInput5: '',\n      multiTextInput6: '',\n      multiTextInput7: '',\n      multiTextInput8: '',\n      multiTextInput9: '',\n      multiTextInput10: '',\n\n      claim: \"mint\",\n      mintTextValue: 'mint功能:',\n      input1: '',\n      input2: '',\n\n      editAddress: '修改权限',\n    }\n  },\n  async mounted() {\n    // import http from '@/request/api.js'\n    if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\n      console.log(\"init tronweb success\");\n    }\n    //初始化数据\n    let accountdata = await window.tronWeb.trx.getAccount(owner_address)\n    console.log(accountdata)\n    if (accountdata.owner_permission.keys[0] !== undefined) {\n      this.multiTextInput1 = window.tronWeb.address.fromHex(accountdata.owner_permission.keys[0].address)\n    }\n    if (accountdata.owner_permission.keys[1] !== undefined) {\n      this.multiTextInput2 = window.tronWeb.address.fromHex(accountdata.owner_permission.keys[1].address)\n    }\n    if (accountdata.owner_permission.keys[2] !== undefined) {\n      this.multiTextInput3 = window.tronWeb.address.fromHex(accountdata.owner_permission.keys[2].address)\n    }\n    if (accountdata.owner_permission.keys[3] !== undefined) {\n      this.multiTextInput4 = window.tronWeb.address.fromHex(accountdata.owner_permission.keys[3].address)\n    }\n    if (accountdata.owner_permission.keys[4] !== undefined) {\n      this.multiTextInput5 = window.tronWeb.address.fromHex(accountdata.owner_permission.keys[4].address)\n    }\n\n    this.multiTextInput6 = accountdata.owner_permission.threshold\n  },\n\n  methods: {\n    async mintFunction() {\n      if (!window.tronWeb && !window.tronWeb.defaultAddress.base58) {\n        alert('未连接钱包')\n        return;\n      }\n      this.multiTextInput10 = '';\n\n      if (this.multiTextInput9 === undefined || this.multiTextInput9 === '') {\n        let functionSelector = 'mint(address,uint256)';\n        let parameters = [{type: 'address', value: this.input1}, {type: 'uint', value: this.input2}];\n        let options = {};\n        let transaction = await window.tronWeb.transactionBuilder.triggerSmartContract(\n            yfxToken,\n            functionSelector,\n            options,\n            parameters,\n            window.tronWeb.defaultAddress.base58\n        );\n        console.log(transaction.transaction);\n\n        let signedTransaction = await window.tronWeb.trx.multiSign(transaction, 0);\n\n        let weightData = await window.tronWeb.trx.getSignWeight(signedTransaction, 0);\n        if (weightData.current_weight >= accountdata.owner_permission.threshold) {\n          const result = await window.tronWeb.trx.broadcast(signedTransaction);\n          console.log(result);\n        } else {\n          console.log(JSON.stringify(signedTransaction));\n        }\n      }else {\n        let signedTransaction = await window.tronWeb.trx.multiSign(transaction, 0);\n\n        let weightData = await window.tronWeb.trx.getSignWeight(signedTransaction, 0);\n        if (weightData.current_weight >= accountdata.owner_permission.threshold) {\n          const result = await window.tronWeb.trx.broadcast(signedTransaction);\n          console.log(result);\n        } else {\n          this.multiTextInput10 = JSON.stringify(signedTransaction)\n        }\n      }\n    },\n\n    async editFunction() {\n      this.multiTextInput8 = '';\n      console.log(\"multiTextInput8: \" + this.multiTextInput8);\n      console.log('default address: ' + window.tronWeb.defaultAddress.base58)\n      if (!window.tronWeb && !window.tronWeb.defaultAddress.base58) {\n        alert('未连接钱包')\n        return;\n      }\n      let accountdata = await window.tronWeb.trx.getAccount(owner_address)\n\n      if (this.multiTextInput7 === undefined || this.multiTextInput7 === '') {\n        if (this.multiTextInput6 === undefined || this.multiTextInput6 === '') {\n          alert('请输入参数')\n          return;\n        }\n\n        if (this.multiTextInput1 === undefined || this.multiTextInput1 === '') {\n          alert('请输入参数')\n          return;\n        }\n\n        let ownerArr = [];\n        let activesArr = [];\n        let threshold = this.multiTextInput6;\n        let jsonData = {\n          \"owner_address\": owner_address,\n          \"owner\": {\n            \"type\": 0,\n            \"id\": 0,\n            \"permission_name\": \"owner\",\n            \"threshold\": Number.parseInt(threshold),\n            \"keys\": ownerArr\n          },\n          \"actives\": [{\n            \"type\": 2,\n            \"id\": 2,\n            \"permission_name\": \"active0\",\n            \"threshold\": Number.parseInt(threshold),\n            \"operations\": \"7fff1fc0037e0000000000000000000000000000000000000000000000000000\",\n            \"keys\": activesArr\n          }]\n        };\n\n        if (this.multiTextInput1 !== undefined && this.multiTextInput1 !== '') {\n          let option = {\n            address: window.tronWeb.address.toHex(this.multiTextInput1),\n            weight: 1\n          }\n          ownerArr.push(option);\n          activesArr.push(option);\n        }\n        if (this.multiTextInput2 !== undefined && this.multiTextInput2 !== '') {\n          let option = {\n            address: window.tronWeb.address.toHex(this.multiTextInput2),\n            weight: 1\n          }\n          ownerArr.push(option);\n          activesArr.push(option);\n        }\n        if (this.multiTextInput3 !== undefined && this.multiTextInput3 !== '') {\n          let option = {\n            address: window.tronWeb.address.toHex(this.multiTextInput3),\n            weight: 1\n          }\n          ownerArr.push(option);\n          activesArr.push(option);\n        }\n        if (this.multiTextInput4 !== undefined && this.multiTextInput4 !== '') {\n          let option = {\n            address: window.tronWeb.address.toHex(this.multiTextInput4),\n            weight: 1\n          }\n          ownerArr.push(option);\n          activesArr.push(option);\n        }\n        if (this.multiTextInput5 !== undefined && this.multiTextInput5 !== '') {\n          let option = {\n            address: window.tronWeb.address.toHex(this.multiTextInput5),\n            weight: 1\n          }\n          ownerArr.push(option);\n          activesArr.push(option);\n        }\n\n        console.log('transaction1:   ' + JSON.stringify(jsonData))\n\n        const url = 'https://api.shasta.trongrid.io/wallet/accountpermissionupdate';\n        const options = {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(jsonData)\n        };\n        console.log(1111)\n        fetch(url, options)\n            .then(res => res.json())\n            .then(async function (json) {\n              console.log('transaction2:   ' + JSON.stringify(json))\n              let signedTransaction = await window.tronWeb.trx.multiSign(json, 0);\n\n              let weightData = await window.tronWeb.trx.getSignWeight(signedTransaction, 0);\n              if (weightData.current_weight >= accountdata.owner_permission.threshold) {\n                const result = await window.tronWeb.trx.broadcast(signedTransaction);\n                console.log(result);\n              } else {\n                console.log(JSON.stringify(signedTransaction));\n              }\n            })\n            .catch(err => console.error('error:' + err));\n      } else {\n        console.log('transaction3:   ' + this.multiTextInput7)\n        let signedTransaction = await window.tronWeb.trx.multiSign(JSON.parse(this.multiTextInput7), 0);\n\n        let weightData = await window.tronWeb.trx.getSignWeight(signedTransaction, 0);\n        if (weightData.current_weight >= accountdata.owner_permission.threshold) {\n          const result = await window.tronWeb.trx.broadcast(signedTransaction);\n          console.log(result);\n        } else {\n          this.multiTextInput8 = JSON.stringify(signedTransaction);\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/views/home"}]}