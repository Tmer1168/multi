{"remainingRequest":"/Users/limengge/Desktop/yfx-info/node_modules/babel-loader/lib/index.js!/Users/limengge/Desktop/yfx-info/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/limengge/Desktop/yfx-info/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/limengge/Desktop/yfx-info/src/views/home/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/limengge/Desktop/yfx-info/src/views/home/Index.vue","mtime":1618569393874},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <template>{{ textValue }}</template>\n    <div></div>\n    <template>{{ textValue1 }}</template>\n    <div></div>\n    <el-button @click=\"claimFunction\">{{ claim }}</el-button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Web3 from 'web3';\n\nlet web3;\nconst abi = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"token_\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"merkleRoot_\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Claimed\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"merkleRoot\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"token\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"isClaimed\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes32[]\",\n        \"name\": \"merkleProof\",\n        \"type\": \"bytes32[]\"\n      }\n    ],\n    \"name\": \"claim\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\n\nconst disTributorAddress = '0xAE1FB3c194c4311f364143093BdE710Bd3f0acEc';\nlet disTributor;\n\nexport default {\n  data() {\n    return {\n      claim: \"claim\",\n      textValue: '当前地址：',\n      textValue1: '当前chainId:',\n      address: undefined,\n      index: undefined,\n      amount: undefined,\n      proof: undefined,\n    }\n  },\n  async mounted() {\n    // import http from '@/request/api.js'\n    if (typeof window.ethereum !== 'undefined') {\n      console.log('MetaMask is installed!');\n    }\n\n    web3 = new Web3(window.ethereum);\n    disTributor = new web3.eth.Contract(abi, disTributorAddress);\n\n    let accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n    let account = accounts[0];\n    this.textValue = '当前地址：' + account;\n    console.log('balance: ' + await web3.eth.getBalance(account))\n\n    window.ethereum.on('accountsChanged', (accounts) => {\n      if (accounts.length > 0) {\n        account = accounts[0];\n        this.textValue = '当前地址：' + account;\n      }\n    });\n\n    let chianId = await ethereum.request({method: 'eth_chainId'});\n    if (chianId === 256) {\n      this.textValue1 = '当前chainId:' + chianId;\n    } else {\n      this.textValue1 = '当前chainId:' + chianId + \" network error\";\n    }\n\n    window.ethereum.on('chainChanged', async (chainId) => {\n      window.location.reload();\n      if (chainId === 256) {\n        this.textValue1 = '当前chainId:' + chainId;\n      } else {\n        this.textValue1 = '当前chainId:' + chainId + \" network error\";\n      }\n    });\n  },\n  methods: {\n    async claimFunction() {\n      axios.get('/api/leaf?address=' + \"0x03819659aFAbf39AdF26A84D4B94922Bf0CF6eD4\").then(async res => {\n        console.log(res.data.data);\n        if (res.data.code === 1) {\n          res = res.data.data\n          console.log(res)\n          await disTributor.methods.claim(res.user_index, res.address, res.amount, JSON.parse(res.proof)).send()\n          alert('领取成功');\n        } else {\n          alert('没有');\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/views/home"}]}