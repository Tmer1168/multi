{"remainingRequest":"/Users/limengge/Desktop/yfx-info/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/limengge/Desktop/yfx-info/src/views/home/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/limengge/Desktop/yfx-info/src/views/home/Index.vue","mtime":1618561283677},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/limengge/Desktop/yfx-info/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2xhaW06ICJjbGFpbSIsCiAgICAgIHRleHRWYWx1ZTogJ+W9k+WJjeWcsOWdgO+8micsCiAgICAgIGFkZHJlc3M6ICcnCiAgICB9CiAgfSwKICBhc3luYyBtb3VudGVkKCkgewogICAgLy8gaW1wb3J0IGh0dHAgZnJvbSAnQC9yZXF1ZXN0L2FwaS5qcycKICAgIGlmICh0eXBlb2Ygd2luZG93LmV0aGVyZXVtICE9PSAndW5kZWZpbmVkJykgewogICAgICBjb25zb2xlLmxvZygnTWV0YU1hc2sgaXMgaW5zdGFsbGVkIScpOwogICAgfQogICAgbGV0IGFjY291bnRzID0gYXdhaXQgd2luZG93LmV0aGVyZXVtLnJlcXVlc3Qoe21ldGhvZDogJ2V0aF9yZXF1ZXN0QWNjb3VudHMnfSk7CiAgICBjb25zdCBhY2NvdW50ID0gYWNjb3VudHNbMF07CiAgICB0aGlzLnRleHRWYWx1ZSA9ICflvZPliY3lnLDlnYDvvJonICsgYWNjb3VudDsKICAgIGNvbnNvbGUubG9nKGFjY291bnQpCgogICAgYXhpb3MuZ2V0KCdodHRwOi8vMTI3LjAuMC4xOjMwMDAvbGVhZj9hZGRyZXNzPTB4ZmMxNURCMEIyNERmYUMxNDczNkJBZjgxNWFhMjBGODlDQzIwYjUzRCcpLnRoZW4ocmVzID0+IHsKICAgICAgY29uc29sZS5sb2cocmVzKQogICAgfSkKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGNsYWltRnVuY3Rpb24oKSB7CgogICAgfQogIH0KfQo="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/home","sourcesContent":["<template>\n  <div>\n    <template>{{ textValue }}</template>\n    <el-button @click=\"claimFunction\">{{ claim }}</el-button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      claim: \"claim\",\n      textValue: '当前地址：',\n      address: ''\n    }\n  },\n  async mounted() {\n    // import http from '@/request/api.js'\n    if (typeof window.ethereum !== 'undefined') {\n      console.log('MetaMask is installed!');\n    }\n    let accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n    const account = accounts[0];\n    this.textValue = '当前地址：' + account;\n    console.log(account)\n\n    axios.get('http://127.0.0.1:3000/leaf?address=0xfc15DB0B24DfaC14736BAf815aa20F89CC20b53D').then(res => {\n      console.log(res)\n    })\n  },\n  methods: {\n    async claimFunction() {\n\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"]}]}